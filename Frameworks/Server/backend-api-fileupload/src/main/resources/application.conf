akka {
  loglevel = INFO
  http.server {
    parsing.max-uri-length = 50k
    parsing.max-header-value-length = 50k
    remote-address-header = on
    parsing.max-content-length = 250m
    request-timeout = 660s
  }
  http.host-connection-pool {
    // see http://doc.akka.io/docs/akka-http/current/scala/http/client-side/pool-overflow.html
    // and http://doc.akka.io/docs/akka-http/current/java/http/configuration.html
    // These settings are relevant for Region Proxy Synchronous Request Pipeline functions and ProjectSchemaFetcher
    max-connections = 64 // default is 4, but we have multiple servers behind lb, so need many connections to single host
    max-open-requests = 2048 // default is 32, but we need to handle spikes
  }
  http.client {
    parsing.max-content-length = 50m
  }
}

jwtSecret = ${?JWT_SECRET}
schemaManagerEndpoint = ${SCHEMA_MANAGER_ENDPOINT}
schemaManagerSecret = ${SCHEMA_MANAGER_SECRET}
awsAccessKeyId = ${AWS_ACCESS_KEY_ID}
awsSecretAccessKey = ${AWS_SECRET_ACCESS_KEY}
awsAccessKeyId = ${AWS_ACCESS_KEY_ID}
awsSecretAccessKey = ${AWS_SECRET_ACCESS_KEY}
// note: special fileupload AWS credentials required because the file bucket is in a separate aws account
fileuploadAwsAccessKeyId = ${FILEUPLOAD_S3_AWS_ACCESS_KEY_ID}
fileuploadAwsSecretAccessKey = ${FILEUPLOAD_S3_AWS_SECRET_ACCESS_KEY}
awsRegion = ${AWS_REGION}

internal {
  dataSourceClass = "slick.jdbc.DriverDataSource"
  properties {
    url = "jdbc:mysql://"${?SQL_INTERNAL_HOST}":"${?SQL_INTERNAL_PORT}"/"${?SQL_INTERNAL_DATABASE}"?autoReconnect=true&useSSL=false&serverTimeZone=UTC&usePipelineAuth=false"
    user = ${?SQL_INTERNAL_USER}
    password = ${?SQL_INTERNAL_PASSWORD}
  }
  numThreads = ${?SQL_INTERNAL_CONNECTION_LIMIT}
  connectionTimeout = 5000
}

clientDatabases {
  client1 {
    master {
      connectionInitSql="set names utf8mb4"
      dataSourceClass = "slick.jdbc.DriverDataSource"
      properties {
        url = "jdbc:mysql://"${?SQL_CLIENT_HOST_CLIENT1}":"${?SQL_CLIENT_PORT}"/?autoReconnect=true&useSSL=false&serverTimeZone=UTC&useUnicode=true&characterEncoding=UTF-8&usePipelineAuth=false"
        user = ${?SQL_CLIENT_USER}
        password = ${?SQL_CLIENT_PASSWORD}
      }
      numThreads = ${?SQL_CLIENT_CONNECTION_LIMIT}
      connectionTimeout = 5000
    }
  }
}

# test DBs

internalTest {
  dataSourceClass = "slick.jdbc.DriverDataSource"
  properties {
    url = "jdbc:mysql://"${?TEST_SQL_INTERNAL_HOST}":"${?TEST_SQL_INTERNAL_PORT}"/"${?TEST_SQL_INTERNAL_DATABASE}"?autoReconnect=true&useSSL=false&serverTimeZone=UTC&usePipelineAuth=false"
    user = ${?TEST_SQL_INTERNAL_USER}
    password = ${?TEST_SQL_INTERNAL_PASSWORD}
  }
  numThreads = ${?TEST_SQL_INTERNAL_CONNECTION_LIMIT}
  connectionTimeout = 5000
}

internalTestRoot {
  dataSourceClass = "slick.jdbc.DriverDataSource"
  properties {
    url = "jdbc:mysql://"${?TEST_SQL_INTERNAL_HOST}":"${?TEST_SQL_INTERNAL_PORT}"/?autoReconnect=true&useSSL=false&serverTimeZone=UTC&usePipelineAuth=false"
    user = "root"
    password = ${?TEST_SQL_INTERNAL_PASSWORD}
  }
  numThreads = ${?TEST_SQL_INTERNAL_CONNECTION_LIMIT}
  connectionTimeout = 5000
}

clientTest {
  dataSourceClass = "slick.jdbc.DriverDataSource"
  properties {
    url = "jdbc:mysql:aurora://"${?TEST_SQL_CLIENT_HOST}":"${?TEST_SQL_CLIENT_PORT}"/?autoReconnect=true&useSSL=false&serverTimeZone=UTC&usePipelineAuth=false"
    user = ${?TEST_SQL_CLIENT_USER}
    password = ${?TEST_SQL_CLIENT_PASSWORD}
  }
  numThreads = ${?TEST_SQL_CLIENT_CONNECTION_LIMIT}
  connectionTimeout = 5000
}
