akka {
  loglevel = INFO
  http.server {
    parsing.max-uri-length = 50k
    parsing.max-header-value-length = 50k
    request-timeout = 60s // Clone Project is too slow for default 20s
  }
  http.host-connection-pool {
    // see http://doc.akka.io/docs/akka-http/current/scala/http/client-side/pool-overflow.html
    // and http://doc.akka.io/docs/akka-http/current/java/http/configuration.html
    // These settings are relevant for Region Proxy Synchronous Request Pipeline functions and ProjectSchemaFetcher
    max-connections = 64 // default is 4, but we have multiple servers behind lb, so need many connections to single host
    max-open-requests = 2048 // default is 32, but we need to handle spikes
  }
}


// Todo this is a silly pattern. Should probably be done in code
logs {
  dataSourceClass = "slick.jdbc.DriverDataSource"
  connectionInitSql="set names utf8mb4"
  properties {
    url = "jdbc:mysql:aurora://"${?SQL_LOGS_HOST}":"${?SQL_LOGS_PORT}"/"${?SQL_LOGS_DATABASE}"?autoReconnect=true&useSSL=false&serverTimeZone=UTC&socketTimeout=60000&useUnicode=true&characterEncoding=UTF-8&usePipelineAuth=false"
    user = ${?SQL_LOGS_USER}
    password = ${?SQL_LOGS_PASSWORD}
  }
  numThreads = 2
  connectionTimeout = 5000
}

logsRoot {
  dataSourceClass = "slick.jdbc.DriverDataSource"
  connectionInitSql="set names utf8mb4"
  properties {
    url = "jdbc:mysql:aurora://"${?SQL_LOGS_HOST}":"${?SQL_LOGS_PORT}"?autoReconnect=true&useSSL=false&serverTimeZone=UTC&socketTimeout=60000&useUnicode=true&characterEncoding=UTF-8&usePipelineAuth=false"
    user = ${?SQL_LOGS_USER}
    password = ${?SQL_LOGS_PASSWORD}
  }
  numThreads = 2
  connectionTimeout = 5000
}

slick.dbs.default.db.connectionInitSql="set names utf8mb4"